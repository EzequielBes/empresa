// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId     String   @id @default(uuid())
  username   String   @unique
  officeId   String?  @default(uuid())
  password   String
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  office     Office?  @relation(fields: [officeId], references: [officeId])

  @@map("user")
}

model Office {
  id         String @id @default(uuid())
  officeId  String  @unique
  officeName String @unique
  users      User[]
  credits    String

  @@map("office")
}

model dadosPessoais {
  id            String   @id @default(uuid())
  nb            Float    @unique
  cpf           Float
  ddb           String
  nome          String
  dt_nascimento String
  sexo          String
  date          DateTime @default(now())

  @@map("dadosPessoais")
}

model listaDadosBeneficio {
  id                        String  @id @default(uuid())
  beneficio                 Float
  especie                   String
  situacao                  String
  pensao                    Boolean
  representanteLegal        Boolean
  possuiProcurador          Boolean
  elegivel                  Boolean
  bloqueioEmprestimo        Boolean
  valorMargemDisponivelRCC  Float
  valorMargemConsignavelEmp Float
  valorMargemDisponivelEmp  Float
  valorMargemUtilizadaEmp   Float
  valorMargemDisponivelRMC  Float
  basedeCalculo             Float

  nb Float 

  @@map("listaDadosBeneficio")
}

model listaDadosBancario {
  id                String @id @default(uuid())
  nomeBanco         String
  codigoBanco       Int
  agencia           String
  cc                String
  tipoMeioPagamento String
  nb                Float  @unique

  @@map("listaDadosBancario")
}

model listaRMC {
  id               String @id @default(uuid())
  situacao         String
  nomeBanco        String
  valor            Float
  codigoBanco      Int
  dataInclusao     String
  numeroEmprestimo String
  limite           Float
  tipoEmprestimo   Int
  nb               Float  

  @@map("listaRMC")
}

model listaEmprestimo {
  id                String @id @default(uuid())
  nomeBanco         String
  codigoBanco       Int
  dataAverbacao     String
  numeroContrato    String
  valorEmprestado   Float
  valorLiberado     Float
  valorParcela      Float
  qtdParcelas       Int
  situacao          String
  qtdParcelaPagas   Int
  competenciaInicio String
  competenciaFim    String
  tipoEmprestimo    Int
  nb                Float  

  @@map("listaEmprestimo")
}
